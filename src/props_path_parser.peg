%% Property path DSL
%%
%% Very similar to JSON paths in JavaScript:
%%
%% Example:
%%   foo.bar[2].baz
%%
%% Paths can be either a string or an atom so both
%%   foo.bar
%% and
%%   "foo.bar"
%% will work the same.
%%
%% Indexes are 1-based, just like Erlang's lists module.

path <- var ('[' int ']')? ('.' path)? `
  case Node of
      [Var, [], []] ->
          [{prop, Var}];
      [Var, [_, I, _], []] ->
          [{prop, Var}, {index, I}];
      [Var, [], [_, Rest]] ->
          [{prop, Var}] ++ Rest;
      [Var, [_, I, _], [_, Rest]] ->
          [{prop, Var}, {index, I}] ++ Rest
  end`;

int <- [0-9]+ `
  list_to_integer(binary_to_list(list_to_binary(Node)))`;

var <- [_a-zA-Z] [_a-zA-Z0-9]* `
  list_to_binary(Node)`;
